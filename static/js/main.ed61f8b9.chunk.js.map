{"version":3,"sources":["i18next.js","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","debug","backend","loadPath","interpolation","escapeValue","Home","lazy","AppRoutes","exact","path","component","Banner","NavBar","Footer","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OASAA,IAGGC,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,YAAa,KACbC,UAdc,CAAC,KAAM,KAAM,KAAM,MAejCC,OAAO,EACPC,QAAS,CACPC,SAAU,yCAEZC,cAAe,CACbC,aAAa,KAIJZ,EAAf,E,YAAeA,I,cC9BTa,EAAOC,gBAAK,kBAAM,iCASTC,EARG,WAChB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,OCIjCM,EAASL,gBAAK,kBAAM,iCACpBM,EAASN,gBAAK,kBAAM,uDACpBO,EAASP,gBAAK,kBAAM,uDAgBXQ,MAff,WACE,OACE,mCACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,IACA,cAACC,EAAD,YCTKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ed61f8b9.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// don't want to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\nconst Languages = [\"en\", \"de\", \"de\", \"es\"];\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    whitelist: Languages,\r\n    debug: true,\r\n    backend: {\r\n      loadPath: \"/Template/locales/{{lng}}/{{ns}}.json\",\r\n    },\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { lazy } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nconst Home = lazy(() => import(\"../pages/Home/Home\"));\r\nconst AppRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","//Libraries\nimport React, { Suspense, lazy } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./i18next\";\n//Styles\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppRoutes from \"./routes/AppRoutes\";\n//Components\n\nconst Banner = lazy(() => import(\"./parts/Banner/Banner\"));\nconst NavBar = lazy(() => import(\"./parts/NavBar/NavBar\"));\nconst Footer = lazy(() => import(\"./parts/Footer/Footer\"));\nfunction App() {\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Router>\n          <Banner />\n          <NavBar />\n          <AppRoutes />\n          <Footer />\n        </Router>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18next\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}